<%- master = @item.marc.config.get_master(tag_name) %>
<%-	marc_subfield_m = marc_tag.fetch_first_by_tag(master) || MarcNode.new(@item.marc.get_model) %>
<%- no_new = params.include?("no_new") ? params["no_new"] : false %>
<%- ac_path = send(params['type'] + "_default_autocomplete")%>
<%- field = params.has_key?("field") ? params['field'] : "id" %>
<%- create_not_found = params.has_key?("allow_not_found") ? params['allow_not_found'] : false %>

<% do_serialize = "serialize_marc" if create_not_found == false %>

<input type="hidden" class="autocomplete_target <%=do_serialize%>" data-tag="<%=tag_name%>" data-subfield="<%=master%>" data-field="<%=field%>" value="<%= marc_subfield_m.content %>">


<table class="marc_editor_grid_internal_layout" cellpadding="0" cellspacing="0">
	<tr>
	<td width="100%">
		<% if create_not_found == false %>
			<%= autocomplete_field_tag "#{tag_name}#{subfield}", marc_subfield.looked_up_content, ac_path, :size => 75, :class => "marc_editor_hotkey autocomplete_new_window" %>
		<%else%>
			<%= autocomplete_field_tag "#{tag_name}#{subfield}", marc_subfield.looked_up_content, ac_path, :size => 75, :class => "marc_editor_hotkey serialize_marc autocomplete_new_window", :"data-subfield"=>"#{master}", :"data-field"=>"#{field}" %>
		<%end%>
	</td>
</tr>
</table>